##########################################################################################
# DEPLOY INSTRUCTIONS
#
# Build Manifests: kubectl kustomize instances/$CURRENT_DIR -o cluster.yaml
# Review Manifests: less cluster.yaml
# kubectl apply --prune -l deploy=sourcegraph -f cluster.yaml
##########################################################################################
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
##########################################################################################
# [RESOURCES] Resources with default settings
#
# You can add additional resources to the end of this section if needed
##########################################################################################
resources:
  # [REQUIRED: BUILD CONFIG] Update this file when using components that have "CONFIG KEYS"
  - buildConfig.yaml # -- Update the CONFIG Key values in buildConfig.yaml when instructed
  # [REQUIRED: RESOURCES] Resources for the default Sourcegraph instance
  - ../../base/sourcegraph # -- Resources for Sourcegraph
  - ../../base/monitoring # -- Resources for Sourcegraph Monitoring Stack
  # ---------------- Add additional resources below this line if needed ---------------- #
  # -
##########################################################################################
# [REQUIRED: NAMESPACE] Add namespace to all resources generated by this overlay
#
# NOTE: Include the 'namespace' component to create namespace with the same name if needed
##########################################################################################
namespace: ns-sourcegraph
##########################################################################################
# [COMPONENTS] Uncomment the lines for the components you'd like to include
#
# To configure your Sourcegraph deployment, uncomment the components/section
# below following the instructions in our configuration docs.
#
# Components with CONFIG KEYS require additional input in the ./buildConfig.yaml file
#
# Docs:
# https://docs.sourcegraph.com/admin/deploy/kubernetes/kustomize/configure
##########################################################################################
components:
  #---------------------------------------------------------------------------------------
  # Namespace Creation
  #---------------------------------------------------------------------------------------
  # - ../../components/resources/namespace # -- Create namespace based on NAMESPACE input above
  #
  #---------------------------------------------------------------------------------------
  # Monitoring Stack
  #---------------------------------------------------------------------------------------
  # - ../../components/monitoring/otel # -- Deploy OpenTelemetry Collector
  # - ../../components/monitoring/tracing # -- Deploy OpenTelemetry Collector with Jaeger as tracing backend
  # - ../../components/monitoring/cadvisor # -- Add resources for cAdvisor (requires privileges)
  # - ../../components/remove/daemonset # -- Remove all services with daemonsets: node-exporter & otel
  # - ../../components/remove/otel-collector # -- Remove otel-collector and otel-agent
  #
  #---------------------------------------------------------------------------------------
  # Resource Allocation - Instance size based
  #---------------------------------------------------------------------------------------
  # Use size XS resources by default. Include one only.
  # Find your instance size on https://docs.sourcegraph.com/admin/deploy/instance-size
  - ../../components/sizes/xs # -- Allocate resources for size XS instance
  # - ../../components/sizes/s # -- Allocate resources for size S instance
  # - ../../components/sizes/m # -- Allocate resources for size M instance
  # - ../../components/sizes/l # -- Allocate resources for size L instance
  # - ../../components/sizes/xl # -- Allocate resources for size XL instance
  # - custom-resources # -- Allocate customized resources --See docs for detailed instructions
  #
  #---------------------------------------------------------------------------------------
  # Storage class
  #---------------------------------------------------------------------------------------
  # - ../../components/storage-class/aws/aws-ebs # -- Create storage class resources for AWS when provisioner = `kubernetes.io/aws-ebs`
  # - ../../components/storage-class/aws/ebs-csi # -- Create storage class resources for AWS when provisioner = `ebs.csi.aws.com`
  # - ../../components/storage-class/azure # -- Create storage class resources for Azure AKS
  # - ../../components/storage-class/gcp # -- Create storage class resources for GCP GKE
  # - ../../components/storage-class/cloud # -- Create storage class resources for other cloud provider
  # - ../../components/storage-class/trident/ext3 # -- Create storage class resources for Trident, fsType ext3
  # - ../../components/storage-class/trident/ext4 # -- Create storage class resources for Trident, fsType ext4
  # - ../../components/storage-class/trident/xfs # -- Create storage class resources for Trident, fsType xfs
  # - ../../components/storage-class/k3s # -- Configure to use the default storage class in a k3s cluster
  # - ../../components/storage-class/sourcegraph # -- Update storageClassName for all resources to 'sourcegraph'
  #
  # - ../../components/storage-class/name-update # -- Update storageClassName to $STORAGECLASS_NAME
  # CONFIG KEYS: STORAGECLASS_NAME
  #
  # - ../../components/storage-class/cloud # -- Create a custom storage class for other cloud providers
  # CONFIG KEYS: STORAGECLASS_NAME
  #              STORAGECLASS_PROVISIONER
  #              STORAGECLASS_PARAM_TYPE
  #
  # - ../../components/storage-class/ssd # -- Create resources to use local SSDs - requires RBACs
  # CONFIG KEYS: SSD_NODE_PATH
  #
  #---------------------------------------------------------------------------------------
  # Networking
  #---------------------------------------------------------------------------------------
  # - ../../components/remove/default-ingress # -- Remove the default ingress from frontend
  # - ../../components/network/nodeport/30080 # -- Use nodeport 30080 for frontend service
  # - ../../components/network/loadbalancer # -- Use load balancer type for frontend service
  # - ../../components/network/network-policy # -- Add NetworkPolicy
  # - ../../components/network/envoy # -- Add EnvoyFilter to resolve known issues caused by service mesh
  # - ../../components/ingress/gke # -- Ingress controller settings for GKE with HTTP load balancing enabled
  # - ../../components/ingress/alb # -- Ingress controller settings for AWS ALB
  # - ../../components/ingress/k3s # -- Ingress controller settings for K3s
  # - ../../components/clusters/aws/managed-cert # -- Apply settings to frontend ingress for aws managed cert
  # - ../../components/clusters/gke/managed-cert # -- Apply settings to frontend ingress for gke managed cert
  #
  # - ../../components/ingress/hostname # -- Set hostname/domain for your Sourcegraph ingress
  # CONFIG KEYS: HOST_DOMAIN
  #
  # - ../../components/network/tls # -- Enable TLS with exisiting certificates
  # CONFIG KEYS: TLS_HOST
  #              TLS_INGRESS_CLASS_NAME
  #              TLS_CLUSTER_ISSUER
  #
  # - ../../components/network/tls-secretname # -- Replace TLS secretName with TLS_SECRET_NAME
  # CONFIG KEYS: TLS_SECRET_NAME
  #
  #---------------------------------------------------------------------------------------
  # External Services
  # You must add external instances via frontend env vars if you remove the bundled instances
  #---------------------------------------------------------------------------------------
  # - ../../components/remove/pgsql/deployment # -- Remove default database deployment for frontend
  # - ../../components/remove/pgsql/statefulset # -- Remove default database statefulset for frontend
  # - ../../components/remove/codeintel-db/deployment # -- Remove default database deployment for code-intel
  # - ../../components/remove/codeintel-db/statefulset # -- Remove default database statefulset for code-intel
  # - ../../components/remove/codeinsights-db/deployment # -- Remove default database deployment for code-insights
  # - ../../components/remove/codeinsights-db/statefulset # -- Remove default database statefulset for code-insights
  # - ../../components/remove/redis # -- Remove embedded redis instance
  #
  # - ../../components/services/redis # -- Use external redis servers
  # CONFIG KEYS: REDIS_CACHE_ENDPOINT
  #              REDIS_STORE_ENDPOINT
  #
  #---------------------------------------------------------------------------------------
  # Other Configurations
  #---------------------------------------------------------------------------------------
  # - ../../components/clusters/k3s # -- Configure instance to run in a k3s cluster (storage class, network, etc)
  # - ../../components/clusters/minikube # -- Configure instance to run in a minikube cluster (storage class, network, etc)
  # - ../../components/enable/rockskip # -- Enable rockskip
  # - ../../components/disable/rockskip # -- Disable rockskip
  # - ../../components/enable/ssh/non-root # Enable SSH to clon repositories as non-root user (default)
  # - ../../components/enable/ssh/root # Enable SSH to clon repositories as root user (when using privileged component)
  # - ../../components/remove/pvcs # -- Remove all pvcs resources
  # - ../../components/remove/prometheus # -- Remove prometheus
  # - ../../components/remove/resources # -- Remove resources (Limits, requests) from all containers
  # - ../../components/remove/security-context # -- Remove security context from all resources
  # - ../../components/utils/uid # -- Run all Postgres database with valid users on host
  # - ../../components/utils/multi-version-upgrade # -- Scale down non-database pods to 0 for multi-version upgrade
  # - ../../components/utils/migrate-to-nonprivileged # -- Component for migrating from privileged to non-privileged
  #
  #---------------------------------------------------------------------------------------
  # Use private registry
  #---------------------------------------------------------------------------------------
  # - ../../components/enable/private-registry # -- Update images name to private registry name
  # CONFIG KEYS: PRIVATE_REGISTRY
  #
  # ------------------------------------------------------------------------
  # Permission Configurations
  # IMPORTANT: Keep the components below as the LAST components
  # ------------------------------------------------------------------------
  # [DO NOT REMOVE] This component add replica count for some statefulset services as env vars to frontend
  # so that when service discovery is disabled, frontend can generate service endpoints based on replica count
  - ../../components/utils/endpoints # REQUIRED - DO NOT REMOVE
  #
  # - ../../components/privileged # -- Run Sourcegraph with privileged and root access
  # - ../../components/monitoring/privileged # -- Run monitoring stack with privileged and root access
  #
  # Recommended for clusters with RBAC enabled.
  # - ../../components/enable/service-discovery # -- Enable service-discovery for frontend
#
#
##########################################################################################
# [SECRETS GENERATOR] Turns the contents of the secret files into Kubernetes secrets
#
# Copy and paste all the associated files to the root of this directory
##########################################################################################
# secretGenerator:
#
#   # - SSH for Gitserver to clone repositories -
#   - name: gitserver-ssh
#     files:
#       - id_rsa
#       - known_hosts
#
#   # - TLS -
#   - name: sourcegraph-frontend-tls
#     behavior: create
#     files:
#       - tls.crt
#       - tls.key
#
#   # - Database -
#   - name: dbs-secrets
#     files:
#       - secrets.env
#
#
##########################################################################################
# [CUSTOM RESOURCES] Add files as patches to customize resources
#
# Create a directory `patches` and then copy the required files as
# instructed by the configuration docs to update ConfigMaps and other
# resources using patch files to customize your deployment
# Do not use the built-in replcias field to update replica counts
##########################################################################################
#
# patches:
#   #---------------------------------------------------------------------------------------
#   # custom patches
#   #---------------------------------------------------------------------------------------
#   - patch: patches/frontend-ingress.annotations.yaml
#   - patch: patches/prometheus.ConfigMap.yaml
#   - patch: patches/pgsql.ConfigMap.yaml
#   - patch: patches/otel-collector.ConfigMap.yaml
#   - patch: patches/custom.NodePort.yaml
#   - patch: patches/resources.yaml
#
#   #---------------------------------------------------------------------------------------
#   # Update env vars for non-frontend services
#   #---------------------------------------------------------------------------------------
#   - patch: |-
#       - op: add
#         path: /spec/template/spec/containers/0/env/-
#         value:
#           name: SRC_ENABLE_GC_AUTO
#           value: "true"
#     target:
#       name: gitserver
#       kind: StatefulSet
#
#   - patch: |-
#       - op: replace
#         path: /spec/template/spec/containers/0/env/0
#         value:
#           name: SEARCHER_CACHE_SIZE_MB
#           value: "50000"
#     target:
#       name: searcher
#       kind: StatefulSet|Deployment
#
#   - patch: |-
#       - op: replace
#         path: /spec/template/spec/containers/0/env/0
#         value:
#           name: SYMBOLS_CACHE_SIZE_MB
#           value: "50000"
#     target:
#       name: symbols
#       kind: StatefulSet|Deployment
#
#   #---------------------------------------------------------------------------------------
#   # Adjust Storage Sizes
#   #---------------------------------------------------------------------------------------
#   - patch: |-
#       - op: replace
#         path: /spec/resources/requests/storage
#         value: 100Gi
#     target:
#       kind: PersistentVolumeClaim
#       name: blobstore|codeinsights-db|codeintel-db|pgsql|prometheus|redis-store|redis-cache
#
#   - patch: |-
#       - op: replace
#         path: /spec/volumeClaimTemplates/0/spec/resources/requests/storage
#         value: 200Gi
#     target:
#       kind: StatefulSet
#       name: gitserver|indexed-search|searcher|symbols
#
#
##########################################################################################
# [FRONTEND ENV VARS] Handles updating env vars for sourcegraph-frontend
##########################################################################################
#
# configMapGenerator:
#   - name: sourcegraph-frontend-env
#     behavior: merge
#     literals:
#       - DEPLOY_TYPE=kustomize # make your edit below this line
#
