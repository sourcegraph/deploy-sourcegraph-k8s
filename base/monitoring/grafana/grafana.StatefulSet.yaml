apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    description: Metrics/monitoring dashboards and alerts.
    kubectl.kubernetes.io/default-container: grafana
  labels:
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
    app.kubernetes.io/component: grafana
  name: grafana
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: grafana
  serviceName: grafana
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
        deploy: sourcegraph
    spec:
      containers:
        - name: grafana
          image: index.docker.io/sourcegraph/grafana:4.5.0@sha256:f70a7f79c5c90cab0d5cfb8f3dbca4dc60ed390b045aff1a86079c87bfe9a8af
          terminationMessagePolicy: FallbackToLogsOnError
          ports:
            - containerPort: 3370
              name: http
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-data
            - mountPath: /sg_config_grafana/provisioning/datasources
              name: config
            - mountPath: /sg_grafana_additional_dashboards
              name: dashboards
          # Grafana is relied upon to send alerts to site admins when something is wrong with
          # Sourcegraph, thus its memory requests and limits are the same to guarantee it has enough
          # memory to perform its job reliably and prevent conflicts with other pods on the same
          # host node.
          resources:
            limits:
              cpu: "1"
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsGroup: 472
            runAsUser: 472
      volumes:
        - name: config
          configMap:
            defaultMode: 0777
            name: grafana
      securityContext:
        runAsUser: 472
        fsGroup: 472
        fsGroupChangePolicy: OnRootMismatch
  volumeClaimTemplates:
    - metadata:
        name: grafana-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 2Gi
