apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    description: Code Insights Postgres DB instance.
  labels:
    app.kubernetes.io/component: codeinsights-db
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
  name: codeinsights-db
spec:
  replicas: 1
  revisionHistoryLimit: 10
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: codeinsights-db
  serviceName: codeinsights-db
  template:
    metadata:
      labels:
        deploy: sourcegraph
        app: codeinsights-db
        group: backend
    spec:
      initContainers:
        - name: correct-data-dir-permissions
          image: index.docker.io/sourcegraph/alpine-3.14:6.7.375@sha256:84f10d97fb28f223e750694393eaf13ed60222a5d8656cee95dfd3536862b1bf
          command: ["sh", "-c", "if [ -d /var/lib/postgresql/data/pgdata ]; then chmod 750 /var/lib/postgresql/data/pgdata; fi"]
          volumeMounts:
            - mountPath: /var/lib/postgresql/data/
              name: disk
          resources:
            limits:
              cpu: "10m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "50Mi"
          securityContext:
            # Required to prevent escalations to root.
            allowPrivilegeEscalation: false
            runAsGroup: 70
            runAsUser: 70
      containers:
        - name: codeinsights
          image: index.docker.io/sourcegraph/postgresql-16-codeinsights:6.7.375@sha256:b5ff2547b92ef9c4f9b34dba8758889b7988c6ae965182a5897e2b2f3413803a
          env:
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_PASSWORD # Accessible by Sourcegraph applications on the network only, so password auth is not used.
              value: password
            - name: POSTGRES_USER
              value: postgres
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRESQL_CONF_DIR
              value: "/conf"
          terminationMessagePolicy: FallbackToLogsOnError
          ports:
            - containerPort: 5432
              name: codeinsights-db
          resources:
            limits:
              cpu: "4"
              memory: 2Gi
            requests:
              cpu: "4"
              memory: 2Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsGroup: 70
            runAsUser: 70
          volumeMounts:
            - mountPath: /var/lib/postgresql/data/
              name: disk
            - mountPath: /conf
              name: codeinsights-conf
        - env:
            - name: DATA_SOURCE_NAME
              value: postgres://postgres:@localhost:5432/?sslmode=disable
            - name: PG_EXPORTER_EXTEND_QUERY_PATH
              value: /config/code_insights_queries.yaml
          image: index.docker.io/sourcegraph/postgres_exporter:6.7.375@sha256:075c78ea88411ae2c337b4a4ea335869ad2799002ebd4dd20db7f6df49fdb1f9
          terminationMessagePolicy: FallbackToLogsOnError
          name: pgsql-exporter
          ports:
            - name: pgsql-exporter
              containerPort: 9187
          resources:
            limits:
              cpu: 10m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 50Mi
      terminationGracePeriodSeconds: 120
      securityContext:
        runAsUser: 70
        fsGroup: 70
        fsGroupChangePolicy: "OnRootMismatch"
      volumes:
        - name: disk
          persistentVolumeClaim:
            claimName: codeinsights-db
        - name: codeinsights-conf
          configMap:
            # 511 in decimal = 0777 in octal
            defaultMode: 511
            name: codeinsights-db-conf
