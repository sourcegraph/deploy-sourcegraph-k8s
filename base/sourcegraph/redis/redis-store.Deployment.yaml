apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Redis for storing semi-persistent data like user sessions.
  labels:
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
    app.kubernetes.io/component: redis
  name: redis-store
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: redis-store
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        deploy: sourcegraph
        app: redis-store
    spec:
      containers:
        - name: redis-store
          image: us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal/redis-store:6.4.0@sha256:54068a563f4d44026e01b35c4ecce48bd611dfb58cc72a44c789f991b09a9bac
          terminationMessagePolicy: FallbackToLogsOnError
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: redis
          ports:
            - containerPort: 6379
              name: redis
          readinessProbe:
            initialDelaySeconds: 10
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  #!/bin/bash
                  PASS_CHECK=$(grep -h "requirepass" /etc/redis/redis.conf | cut -d ' ' -f 2)
                  if [ ! -z "$PASS_CHECK" ]; then
                    export REDISCLI_AUTH="$PASS_CHECK"
                  fi
                  response=$(
                    redis-cli ping
                  )
                  if [ "$response" != "PONG" ]; then
                    echo "$response"
                    exit 1
                  fi
          resources:
            limits:
              cpu: "1"
              memory: 7Gi
            requests:
              cpu: "1"
              memory: 7Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsGroup: 1000
            runAsUser: 999
          volumeMounts:
            - mountPath: /redis-data
              name: redis-data
        - name: redis-exporter
          image: us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal/redis_exporter:6.4.0@sha256:32bd4cce3493897fd4569b4d763ccd3c22ec6eeeb92769711e0cd3292fcff044
          terminationMessagePolicy: FallbackToLogsOnError
          ports:
            - containerPort: 9121
              name: redisexp
          resources:
            limits:
              cpu: 10m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsGroup: 1000
            runAsUser: 999
      securityContext:
        runAsUser: 999
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-store
