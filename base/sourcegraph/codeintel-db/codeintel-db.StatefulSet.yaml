apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    description: Postgres database for various data.
    kubectl.kubernetes.io/default-container: pgsql
  labels:
    app.kubernetes.io/component: codeintel-db
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
  name: codeintel-db
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: codeintel-db
  serviceName: codeintel-db
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        deploy: sourcegraph
        app: codeintel-db
        group: backend
    spec:
      initContainers:
        - name: correct-data-dir-permissions
          image: index.docker.io/sourcegraph/alpine-3.14:5.9.0@sha256:5d55abef94603e5c2a19c57b639d97a1c243dc28fb61609dc0d94e69bb65966f
          command: ["sh", "-c", "if [ -d /data/pgdata-12 ]; then chmod 750 /data/pgdata-12; fi"]
          volumeMounts:
            - mountPath: /data
              name: disk
          securityContext:
            allowPrivilegeEscalation: false
            runAsGroup: 999
            runAsUser: 999
          resources:
            limits:
              cpu: "10m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "50Mi"
      containers:
        - name: pgsql
          image: index.docker.io/sourcegraph/codeintel-db:5.9.0@sha256:e707113d032e21a77d961c6a48b4f90f012424db026a9506b76115986eeaa80d
          terminationMessagePolicy: FallbackToLogsOnError
          readinessProbe:
            exec:
              command:
                - /ready.sh
          livenessProbe:
            initialDelaySeconds: 15
            exec:
              command:
                - /liveness.sh
          startupProbe:
            exec:
              command:
                - /liveness.sh
            failureThreshold: 360
            periodSeconds: 10
          ports:
            - containerPort: 5432
              name: pgsql
          resources:
            limits:
              cpu: "4"
              memory: 4Gi
            requests:
              cpu: "4"
              memory: 4Gi
          securityContext:
            # Required to prevent escalations to root.
            allowPrivilegeEscalation: false
            runAsUser: 999
            runAsGroup: 999
          volumeMounts:
            - mountPath: /data
              name: disk
            - mountPath: /conf
              name: pgsql-conf
        - env:
            - name: DATA_SOURCE_NAME
              value: postgres://sg:@localhost:5432/?sslmode=disable
            - name: PG_EXPORTER_EXTEND_QUERY_PATH
              value: /config/code_intel_queries.yaml
          image: index.docker.io/sourcegraph/postgres_exporter:5.9.0@sha256:98663c98e0566504f97a0f4b375ce675b0dd03fad53dd9f35f9bb35575b98335
          terminationMessagePolicy: FallbackToLogsOnError
          name: pgsql-exporter
          ports:
            - name: pgsql-exporter
              containerPort: 9187
          resources:
            limits:
              cpu: 10m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 50Mi
      terminationGracePeriodSeconds: 120
      securityContext:
        fsGroup: 999
        fsGroupChangePolicy: "OnRootMismatch"
        runAsUser: 999
      volumes:
        - name: disk
          persistentVolumeClaim:
            claimName: codeintel-db
        - name: pgsql-conf
          configMap:
            # 511 in decimal = 0777 in octal
            defaultMode: 511
            name: codeintel-db-conf
