apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    description: Postgres database for various data.
    kubectl.kubernetes.io/default-container: pgsql
  labels:
    app.kubernetes.io/component: codeintel-db
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
  name: codeintel-db
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: codeintel-db
  serviceName: codeintel-db
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        deploy: sourcegraph
        app: codeintel-db
        group: backend
    spec:
      initContainers:
        - name: correct-data-dir-permissions
          image: us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal/alpine-3.14:6.2.0@sha256:3213719ab6953290cae0801390abe73edb680f768a18ae8cf5843e6776d8e3d8
          command: ["sh", "-c", "if [ -d /data/pgdata-12 ]; then chmod 750 /data/pgdata-12; fi"]
          volumeMounts:
            - mountPath: /data
              name: disk
          securityContext:
            allowPrivilegeEscalation: false
            runAsGroup: 999
            runAsUser: 999
          resources:
            limits:
              cpu: "10m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "50Mi"
      containers:
        - name: pgsql
          image: us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal/postgresql-16:6.2.0@sha256:9baa62e2b92b9d1af5912c8b97a0eb82c69c2d4d3028355e5d2de78f4b67c5aa
          terminationMessagePolicy: FallbackToLogsOnError
          readinessProbe:
            exec:
              command:
                - /ready.sh
          livenessProbe:
            initialDelaySeconds: 15
            exec:
              command:
                - /liveness.sh
          startupProbe:
            exec:
              command:
                - /liveness.sh
            failureThreshold: 360
            periodSeconds: 10
          ports:
            - containerPort: 5432
              name: pgsql
          resources:
            limits:
              cpu: "4"
              memory: 4Gi
            requests:
              cpu: "4"
              memory: 4Gi
          securityContext:
            # Required to prevent escalations to root.
            allowPrivilegeEscalation: false
            runAsUser: 999
            runAsGroup: 999
          volumeMounts:
            - mountPath: /data
              name: disk
            - mountPath: /conf
              name: pgsql-conf
        - env:
            - name: DATA_SOURCE_NAME
              value: postgres://sg:@localhost:5432/?sslmode=disable
            - name: PG_EXPORTER_EXTEND_QUERY_PATH
              value: /config/code_intel_queries.yaml
          image: us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal/postgres_exporter:6.2.0@sha256:d6770ff9ff8ccf8fe8c87cd4bb3814504937bf96244a63ba6c61b630b4ac1e42
          terminationMessagePolicy: FallbackToLogsOnError
          name: pgsql-exporter
          ports:
            - name: pgsql-exporter
              containerPort: 9187
          resources:
            limits:
              cpu: 10m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 50Mi
      terminationGracePeriodSeconds: 120
      securityContext:
        fsGroup: 999
        fsGroupChangePolicy: "OnRootMismatch"
        runAsUser: 999
      volumes:
        - name: disk
          persistentVolumeClaim:
            claimName: codeintel-db
        - name: pgsql-conf
          configMap:
            # 511 in decimal = 0777 in octal
            defaultMode: 511
            name: codeintel-db-conf
