apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    description: Backend for symbols operations.
    kubectl.kubernetes.io/default-container: symbols
  labels:
    app.kubernetes.io/component: symbols
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
  name: symbols
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: symbols
  serviceName: symbols
  template:
    metadata:
      labels:
        app: symbols
        deploy: sourcegraph
    spec:
      securityContext:
        runAsUser: 100
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: symbols
          env:
            - name: SYMBOLS_CACHE_SIZE_MB
              value: "12000"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CACHE_DIR
              value: /mnt/cache/$(POD_NAME)
            - name: OTEL_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(OTEL_AGENT_HOST):4317
          image: us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal/symbols:5.3.666@sha256:bb91b15c9cedff3bf6a85b857a0c876d13526446b2ecf317d907f0731bfec3fb
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 5
          ports:
            - containerPort: 3184
              name: http
            - containerPort: 6060
              name: debug
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            periodSeconds: 5
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "2"
              memory: 2G
            requests:
              cpu: 500m
              memory: 500M
          securityContext:
            allowPrivilegeEscalation: false
            runAsGroup: 101
            runAsUser: 100
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /mnt/cache
              name: cache
      volumes:
        - name: cache
          emptyDir: {}
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        name: cache
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 12G
