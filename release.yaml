meta:
  productName: deploy-sourcegraph-k8s
  repository: "github.com/sourcegraph/deploy-sourcegraph-k8s"
  owners:
    - "@sourcegraph/release"

inputs:
  - releaseId: server

requirements:
  - name: "Github CLI"
    cmd: gh version
    fixInstructions: brew install gh
  - name: "Docker username"
    env: DOCKER_USERNAME
  - name: "Docker password"
    env: DOCKER_PASSWORD

internal:
  create:
    steps:
      patch:
        - name: "sg ops (base)"
          cmd: |
            sg-rfc795 ops update-images \
              --kind k8s \
              --registry us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal \
              --docker-username=$DOCKER_USERNAME \
              --docker-password=$DOCKER_PASSWORD \
              --pin-tag {{inputs.server.tag}} \
              base/
        # - name: "sg ops (executors)"
        #   cmd: |
        #     sg ops update-images \
        #       --kind k8s \
        #       --docker-username=$DOCKER_USERNAME \
        #       --docker-password=$DOCKER_PASSWORD \
        #       --pin-tag {{tag}} \
        #       components/executors/
        - name: "git"
          cmd: |
            echo "Creating branch wip_{{version}}"
            release_branch="wip_{{version}}"
            git checkout -b $release_branch
        - name: "git"
          cmd: |
            find . -name "*.yaml" | xargs git add
            find . -name "*.yml" | xargs git add
            # Careful with the quoting for the config, using double quotes will lead
            # to the shell dropping out all quotes from the json, leading to failed
            # parsing.
            git commit -m "release_patch: {{version}}" -m '{{config}}'
        - name: "git"
          cmd: |
            git push origin wip_{{version}}
        - name: "gh cli"
          cmd: |
            gh pr create -f -t "PRETEND RELEASE WIP: release_patch: build {{version}}" # -l "wip_release"
  finalize:
    steps:
      - name: "git"
        cmd: |
          git checkout -b wip-release-{{version}}
          git push origin wip-release-{{version}}
          git checkout -

test:
  steps:
    - name: "placeholder"
      cmd: |
        echo "-- pretending to test release ..."

promoteToPublic:
  create:
    steps:
      - name: "git"
        cmd: |
          echo "Checking out origin/wip-release-{{version}}"
          git fetch origin
          git checkout origin/wip-release-{{version}}
      - name: "sg ops"
        cmd: |
          sg-rfc795 ops update-images \
            --kind k8s \
            --registry us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-public \
            --docker-username=$DOCKER_USERNAME \
            --docker-password=$DOCKER_PASSWORD \
            --pin-tag {{inputs.server.tag}} \
            base/
      - name: "git"
        cmd: |
          echo "Creating branch promote-release_{{version}}"
          branch="promote-release_{{version}}"
          git checkout -b $branch
      - name: "git"
        cmd: |
          find . -name "*.yaml" | xargs git add
          find . -name "*.yml" | xargs git add
          # Careful with the quoting for the config, using double quotes will lead
          # to the shell dropping out all quotes from the json, leading to failed
          # parsing.
          git commit -m "promote_release: {{version}}" -m '{{config}}'
      - name: "github"
        cmd: |
          git push origin promote-release_{{version}}
          gh pr create -f -t "PRETEND PROMOTE RELEASE WIP: promote-release: build {{version}}" --base wip-release-{{version}}
    finalize:
      steps:
        - name: git:tag
          cmd: |
            branch="wip-release_{{version}}"
            git checkout ${branch}
            git tag {{version}}
            git push origin ${branch} --tags
