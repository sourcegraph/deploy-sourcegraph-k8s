apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
############################################################################
#
# HOW TO USE:
#
# To configure your Sourcegraph deployment, uncomment the components/section
# below following the instruction in our configuration docs.
#
# Docs:
# https://docs.sourcegraph.com/admin/deploy/kubernetes/kustomize/configure
#
############################################################################
# Resources for all Sourcegraph services with default settings
resources:
  - ../../base/sourcegraph

############################################################################
# NAMESPACE
############################################################################
# Update namespace for resources generated by this overlay
namespace: default

############################################################################
# COMPONENTS
############################################################################
components:
  # Add resources for Sourcegraph monitoring stack
  # cadvisor is not included in mointoring stack by default
  # NOTE: cadvisor only works with privilege
  - ../../components/monitoring

  # Run Sourcegraph Monitoring Stack with privileged and root access
  # This also adds RBAC resources to the Sourcegraph Monitoring Stack
  # Privilege and RBAC-enabled cluster required
  # NOTE: Does not include cadvisor
  - ../../components/monitoring/privileged

  # Deploy cadvisor
  # Run with privilege
  # Create service account with cluster admin role
  # Privilege and RBAC-enabled cluster required
  - ../../components/monitoring/cadvisor

  # Create a namespace base on the namespace value in NAMESPACE section above
  - ../../components/namespace

  # Run Sourcegraph with privileged and root access
  # Privilege and RBAC-enabled cluster required
  - ../../components/privileged

  # Allocate resources based on instance size:
  - ../../components/sizes/xs
  - ../../components/sizes/s
  - ../../components/sizes/m
  - ../../components/sizes/l
  - ../../components/sizes/xl

  # Remove all services with daemonsets resources: node-exporter and otel
  - ../../components/remove/daemonset

  # Remove all security-context fields
  - ../../components/remove/security-context

  # Update the following env vars in the **FRONTEND ENV VARS**
  # section located at the bottom of this file:
  # - PRIVATE_REGISTRY
  - ../../components/private-registry

  # Disable or enable rockskip
  - ../../components/disable/rockskip # Disable
  - ../../components/enable/rockskip # Enable

  # Use nodeport 30080 for frontend
  - ../../components/nodeport/30080

  # Use load balancer type for frontend
  - ../../components/ingress/frontend-loadbalancer

  # Remove the default ingress from frontend
  - ../../components/remove/default-ingress

  # Remove all pvcs resources
  - ../../components/remove/pvcs

  # Remove all container resources (Limits, requests)
  - ../../components/remove/resources

  # Update network-policy
  - ../../components/network-policy

  # Use custom redis servers
  # Update the following env vars in the **FRONTEND ENV VARS**
  # section located at the bottom of this file:
  # REDIS_CACHE_ENDPOINT & REDIS_STORE_ENDPOINT
  - ../../components/redis

  # Use ssh to clon repositories
  # Also see GENERATE SECRETS sections for importing ssh files
  - ../../components/ssh/non-root # Non-root user
  - ../../components/ssh/root # Root user

  # Create storage class resources for cloud providers
  #
  # Do not include more than one storage class from this list
  - ../../components/storage-class/aws # For aws
  - ../../components/storage-class/azure # For azure
  - ../../components/storage-class/gcp # For gcp
  - ../../components/storage-class/trident/ext3 # For Trident fsType ext3
  - ../../components/storage-class/trident/ext4 # For Trident fsType ext4
  - ../../components/storage-class/trident/xfs # For Trident fsType xfs

  # For other cloud providers
  #
  # Update env vars below in the **FRONTEND ENV VARS**
  # section located at the bottom of this file:
  # - STORAGECLASS_NAME
  # - STORAGECLASS_PROVISIONER
  # - STORAGECLASS_PARAM_TYPE
  - ../../components/storage-class/cloud

  # Create resources to use local SSDs - RBACs required
  #
  # Update the following env vars in the **FRONTEND ENV VARS**
  # section located at the bottom of this file:
  # - SSD_NODE_PATH
  - ../../components/ssd

  # To enable TLS
  #
  # Update env vars below in the **FRONTEND ENV VARS**
  # section located at the bottom of this file:
  # - TLS_HOST
  # - TLS_INGRESS_CLASS_NAME
  # - TLS_CLUSTER_ISSUER
  #
  # Add tls.crt & tls.key to the config directory
  # Then uncomment all TLS fields in "secretGenerator" section below
  - ../../components/tls

  # Set hostname for your Sourcegraph ingress
  #
  # Update env vars below in the **FRONTEND ENV VARS**
  # section located at the bottom of this file:
  # - HOST_DOMAIN=your.company.com
  - ../../components/hostname

  # Run as arbitrary users in all Postgres database
  - ../../components/uid

  # Enable service-discovery for frontend service
  # It is strongly recommended for clusters with RBAC enabled.
  # IMPORTANT: Comment the ENDPOINT UPDATE section when using this component
  - ../../components/enable/service-discovery

  # Update and generate resources from the old cluster
  # This includes:
  # - the monitoring stack and cadvisor
  # - searcher and symbols as Deployment
  # - run as root, privilieged
  # - include RBAC resources
  # This should only be used to generate old cluster for comparision purpose
  # IMPORTANT: Comment the ENDPOINT UPDATE section when using this component
  - ../../components/old-cluster

############################################################################
# UPDATE REPLICA COUNTS
#
# Services that are not in the list below do not require more than 1 replica
############################################################################
replicas:
  - name: gitserver
    count: 1
  - name: searcher
    count: 1
  - name: symbols
    count: 1
  - name: indexed-search
    count: 1
  - name: sourcegraph-frontend
    count: 2
  - name: precise-code-intel-worker
    count: 1

############################################################################
# UPDATE CONFIGMAP
#
# Create a directory `patches` and then copy the required files when
# instructed by the configuration docs
############################################################################
patchesStrategicMerge:
  - patches/prometheus.ConfigMap.yaml
  - patches/pgsql.ConfigMap.yaml
  - patches/otel-collector.ConfigMap.yaml
  - patches/custom.NodePort.yaml

############################################################################
# UPDATE ANNOTATIONS
#
# When instructed by the configuration docs to set up the necessary files
# for configuring your Sourcegraph instance:
# 1. Create a directory called 'patches': mkdir patches
# 2. Create the required files within the 'patches' directory
# This will ensure the files are in the correct location for the
# configuration process to access them.
############################################################################
patchesJson6902:
  - target:
      version: v1
      kind: Ingress
      name: sourcegraph-frontend
    path: patches/frontend-ingress.annotations.yaml

############################################################################
# GENERATE SECRETS
############################################################################
secretGenerator:
  - name: sourcegraph-frontend-tls
    behavior: create
    files:
      - tls.crt
      - tls.key
      - additional.file
      - additional.file
      - additional.file

  # Generate secrets for gitserver to use ssh
  - name: gitserver-ssh
    files:
      - id_rsa
      - known_hosts

  # Generate secrets for database
  - name: dbs-secrets
    files:
      - secrets.env
      - additional.file
      - additional.file
      - additional.file
      - additional.file
      - additional.file

############################################################################
# ENDPOINT UPDATE
#
# Handle updating endpoints configs for frontend
# NO CHANGES REQUIRED FOR THIS SECTION
# Comment this section when:
# - using the old-cluster
# - service discovery enabled for frontend
# - running in a RBAC enabled cluster
############################################################################
replacements:
  - source:
      kind: StatefulSet
      fieldPath: spec.replicas
      name: gitserver
    targets:
      - select: &endpoints-map
          kind: ConfigMap
          name: sourcegraph-frontend-env
        fieldPaths:
          - data.GITSERVER_REPLICA_COUNT
  - source:
      kind: StatefulSet
      fieldPath: spec.replicas
      name: indexed-search
    targets:
      - select: *endpoints-map
        fieldPaths:
          - data.INDEXED_SEARCH_REPLICA_COUNT
  - source:
      kind: StatefulSet
      fieldPath: spec.replicas
      name: searcher
    targets:
      - select: *endpoints-map
        fieldPaths:
          - data.SEARCHER_REPLICA_COUNT
  - source:
      kind: StatefulSet
      fieldPath: spec.replicas
      name: symbols
    targets:
      - select: *endpoints-map
        fieldPaths:
          - data.SYMBOLS_REPLICA_COUNT

############################################################################
# OVERLAY CONFIGURATIONS
#
# Enter the configuration values as instructed by components used
# Always refer to the componentâ€™s documentation or comments before updating
############################################################################
configMapGenerator:
  # Handle updating configs using env vars for kustomize
  - name: sourcegraph-kustomize-env
    behavior: merge
    literals:
      - NAME=sourcegraph-kustomize
      # - TLS_HOST=
      # - TLS_INGRESS_CLASS_NAME=
      # - TLS_CLUSTER_ISSUER=
      # - STORAGECLASS_NAME=
      # - STORAGECLASS_PROVISIONER=
      # - STORAGECLASS_PARAM_TYPE=
      # - PRIVATE_REGISTRY=
      # - AWS_MANAGED_CERT_ARN=
      # - GKE_MANAGED_CERT_NAME=
      #  - HOST_DOMAIN=

  ############################################################################
  # FRONTEND ENV VARS
  #
  # Update environment variables for the sourcegraph-frontend service here
  # These environment variables are used to configure your Sourcegraph instance,
  # such as authentication and authorization settings, feature flags, and more.
  ############################################################################
  # Handle updating env vars for frontend
  - name: sourcegraph-frontend-env
    behavior: merge
    literals:
      # Add env var as instructed below this line
      # - PGDATABASE=
      # - PGHOST=
      # - PGPORT=
      # - PGSSLMODE=
      # - PGUSER=
      # - CODEINSIGHTS_PGDATASOURCE=
      # - CODEINTEL_PGDATABASE=
      # - CODEINTEL_PGHOST=
      # - CODEINTEL_PGPORT=
      # - CODEINTEL_PGSSLMODE=
      # - CODEINTEL_PGUSER=
